// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/[handle]" | "/admin" | "/admin/analytics" | "/admin/audit-log" | "/admin/reports" | "/auth/setup" | "/auth/signin" | "/auth/signup" | "/legal/guidelines" | "/legal/privacy" | "/legal/terms" | "/live/[id]" | "/search" | "/settings/notifications" | "/studio" | "/studio/analytics" | "/studio/live" | "/studio/live/[id]" | "/studio/live/create" | "/studio/videos/[id]/analytics" | "/studio/videos/[id]/comments" | "/studio/videos/[id]/edit" | "/upload" | "/watch/[id]"
type AppRouteHandlerRoutes = "/api/analytics/track-view" | "/api/analytics/track-watch-time" | "/auth/callback"
type PageRoutes = never
type LayoutRoutes = "/" | "/auth" | "/auth/setup"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/[handle]": { "handle": string; }
  "/admin": {}
  "/admin/analytics": {}
  "/admin/audit-log": {}
  "/admin/reports": {}
  "/api/analytics/track-view": {}
  "/api/analytics/track-watch-time": {}
  "/auth": {}
  "/auth/callback": {}
  "/auth/setup": {}
  "/auth/signin": {}
  "/auth/signup": {}
  "/legal/guidelines": {}
  "/legal/privacy": {}
  "/legal/terms": {}
  "/live/[id]": { "id": string; }
  "/search": {}
  "/settings/notifications": {}
  "/studio": {}
  "/studio/analytics": {}
  "/studio/live": {}
  "/studio/live/[id]": { "id": string; }
  "/studio/live/create": {}
  "/studio/videos/[id]/analytics": { "id": string; }
  "/studio/videos/[id]/comments": { "id": string; }
  "/studio/videos/[id]/edit": { "id": string; }
  "/upload": {}
  "/watch/[id]": { "id": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/auth": never
  "/auth/setup": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
